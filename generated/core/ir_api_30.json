{
  "openapi": "3.0.3",
  "info": {
    "title": "Cube Iridium HTTP API",
    "contact": {
      "name": "Cube",
      "url": "https://www.cube.exchange",
      "email": "support@cube.exchange"
    },
    "version": "0.1.0"
  },
  "paths": {
    "/users/check": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/users/subaccounts": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "required": [
                        "ids"
                      ],
                      "properties": {
                        "ids": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      },
                      "example": {
                        "ids": [
                          1,
                          2,
                          3
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "accountType",
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "accountType": {
                    "type": "string",
                    "enum": [
                      "spot",
                      "margin"
                    ]
                  }
                },
                "example": {
                  "accountType": "spot",
                  "name": "example subaccount"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64"
                        }
                      },
                      "example": {
                        "id": 11
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/users/subaccount/{subaccount_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "subaccount_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "required": [
                        "addresses",
                        "hasOrderHistory",
                        "id",
                        "name"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "name": {
                          "type": "string"
                        },
                        "addresses": {
                          "description": "Deposit address by source id",
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": [
                              {
                                "type": "integer",
                                "format": "int32"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "maxItems": 2,
                            "minItems": 2
                          }
                        },
                        "hasOrderHistory": {
                          "type": "boolean"
                        }
                      },
                      "example": {
                        "addresses": {
                          "101": "tb1p5gw5zm938qql65l2kqke5hx3tpmr4xkjrgy4g93qurer8eq9l2js0g6a9w",
                          "103": "4t2XDAGnuePMj8QUjGxr8zSVbjztwzVVZP8Su9mn1DTV",
                          "105": "nrceaqQdBp2PGiidq5FYe7YzsHZv9U5Yd5",
                          "106": "5DNHinCkxF42JUFpQGZiwof8g6SEdhYfDehRjG5ukfgZVhe6",
                          "107": "tltc1q7h6xgpcf7q685at7jzx74cud6a0j72yn2wsgkr",
                          "108": "cosmos17h6xgpcf7q685at7jzx74cud6a0j72yn06hwe5"
                        },
                        "hasOrderHistory": true,
                        "id": 48,
                        "name": "working_capital"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "subaccount_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "subaccount new name"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64"
                        }
                      },
                      "example": {
                        "id": 11
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/users/subaccount/{subaccount_id}/positions": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "subaccount_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "inner",
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "inner": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "accountingType",
                                "amount",
                                "assetId",
                                "pendingDeposits",
                                "receivedAmount"
                              ],
                              "properties": {
                                "amount": {
                                  "description": "The cube-sequenced amount.",
                                  "type": "string",
                                  "format": "number"
                                },
                                "receivedAmount": {
                                  "description": "The on-chain amount according to the latest `received` block.",
                                  "type": "string",
                                  "format": "number"
                                },
                                "pendingDeposits": {
                                  "type": "string",
                                  "format": "number"
                                },
                                "assetId": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "accountingType": {
                                  "type": "string",
                                  "enum": [
                                    "liability",
                                    "receivable",
                                    "income",
                                    "asset",
                                    "loss"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "example": {
                        "8": {
                          "inner": [
                            {
                              "accountingType": "asset",
                              "amount": "502500000",
                              "assetId": 1,
                              "pendingDeposits": "0",
                              "receivedAmount": "502500000"
                            },
                            {
                              "accountingType": "asset",
                              "amount": "5999780000000000000",
                              "assetId": 2,
                              "pendingDeposits": "0",
                              "receivedAmount": "5999780000000000000"
                            }
                          ],
                          "name": "primary"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/users/subaccount/{subaccount_id}/transactions": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "subaccount_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "required": [
                        "deposits",
                        "transfers",
                        "withdrawals"
                      ],
                      "properties": {
                        "deposits": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "required": [
                              "inner",
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "inner": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "amount",
                                    "assetId",
                                    "createdAt",
                                    "fiatToCrypto",
                                    "timeEst",
                                    "txnState",
                                    "updatedAt"
                                  ],
                                  "properties": {
                                    "assetId": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "amount": {
                                      "type": "string",
                                      "format": "number"
                                    },
                                    "txnHash": {
                                      "description": "Deposits that are found on-chain will have a `txn_hash` and `txn_index`. If it is a pending deposit determined by some external payment system, these can be empty",
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "txnIndex": {
                                      "type": "integer",
                                      "format": "int64",
                                      "nullable": true
                                    },
                                    "createdAt": {
                                      "description": "When we first started tracking this deposit. Probably in the mempool.",
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "updatedAt": {
                                      "description": "If `txn_state` is `Confirmed` and `KytStatus` is accepted, this is the time that the deposit is credited. Otherwise, it is the last update (e.g if a kyt external id was created, or transaction state updated).",
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "txnState": {
                                      "description": "The deposit is credited when `Confirmed` and accepted.",
                                      "type": "string",
                                      "enum": [
                                        "pending",
                                        "received",
                                        "confirmed",
                                        "dropped",
                                        "failed"
                                      ]
                                    },
                                    "address": {
                                      "description": "The deposit source address",
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "timeEst": {
                                      "description": "The estimated time that this deposit will transition to `Confirmed`. This is currently only applicable for `Received` deposits",
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "fiatToCrypto": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "example": {
                            "8": {
                              "inner": [
                                {
                                  "address": "bcrt1qfsf0tfcw0qvtxnm8qmktwpxpt8v0hk4rawh0n7",
                                  "amount": "1100000000",
                                  "assetId": 1,
                                  "createdAt": "2023-07-30T14:30:00-05:00",
                                  "fiatToCrypto": false,
                                  "kytStatus": "accept",
                                  "txnHash": "faae74ae3700cdea62f51930d489a34f3bc4ee2521a017a9bad72dbd0a5156b4",
                                  "txnIndex": 1,
                                  "txnState": "confirmed",
                                  "updatedAt": "2023-07-30T14:30:00-05:00"
                                },
                                {
                                  "address": "0x313E3566cE1Db6672287ccE000cf0c617Dc369af",
                                  "amount": "111780000000000000",
                                  "assetId": 2,
                                  "createdAt": "2023-07-30T14:30:00-05:00",
                                  "fiatToCrypto": false,
                                  "kytStatus": "accept",
                                  "txnHash": "0xd2f7b34100d66835565fc598bfac7469881a3db5d1a9e926813853d73a6f16c8",
                                  "txnIndex": 0,
                                  "txnState": "confirmed",
                                  "updatedAt": "2023-07-30T14:30:00-05:00"
                                }
                              ],
                              "name": "primary"
                            }
                          }
                        },
                        "withdrawals": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "required": [
                              "inner",
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "inner": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "address",
                                    "amount",
                                    "assetId",
                                    "attemptId",
                                    "createdAt",
                                    "updatedAt"
                                  ],
                                  "properties": {
                                    "assetId": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "amount": {
                                      "type": "string",
                                      "format": "number"
                                    },
                                    "txnHash": {
                                      "description": "Once the transaction has been determined / sent, `txn_hash`, `txn_index`, and `txn_state` will be populated",
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "txnIndex": {
                                      "type": "integer",
                                      "format": "int64",
                                      "nullable": true
                                    },
                                    "txnState": {
                                      "type": "string",
                                      "enum": [
                                        "pending",
                                        "received",
                                        "confirmed",
                                        "dropped",
                                        "failed"
                                      ],
                                      "nullable": true
                                    },
                                    "createdAt": {
                                      "description": "When the withdrawal request was created.",
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "updatedAt": {
                                      "description": "When the withdrawal was sent out.",
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "attemptId": {
                                      "description": "A unique identifier for this withdrawal request.",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "address": {
                                      "description": "The withdrawal destination address",
                                      "type": "string"
                                    },
                                    "approved": {
                                      "type": "boolean",
                                      "nullable": true
                                    },
                                    "reason": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "example": {
                            "8": {
                              "inner": [
                                {
                                  "address": "bcrt1qfsf0tfcw0qvtxnm8qmktwpxpt8v0hk4rawh0n7",
                                  "amount": "12000000",
                                  "approved": true,
                                  "assetId": 1,
                                  "attemptId": 112,
                                  "createdAt": "2023-07-30T14:30:00-05:00",
                                  "kytStatus": "accept",
                                  "txnHash": "faae74ae3700cdea62f51930d489a34f3bc4ee2521a017a9bad72dbd0a5156b4",
                                  "txnIndex": 1,
                                  "txnState": "confirmed",
                                  "updatedAt": "2023-07-30T14:30:00-05:00"
                                },
                                {
                                  "address": "0x313E3566cE1Db6672287ccE000cf0c617Dc369af",
                                  "amount": "11178000000000000000",
                                  "approved": true,
                                  "assetId": 2,
                                  "attemptId": 234,
                                  "createdAt": "2023-07-30T14:30:00-05:00",
                                  "kytStatus": "accept",
                                  "txnHash": "0xd2f7b34100d66835565fc598bfac7469881a3db5d1a9e926813853d73a6f16c8",
                                  "txnIndex": 0,
                                  "txnState": "confirmed",
                                  "updatedAt": "2023-07-30T14:30:00-05:00"
                                }
                              ],
                              "name": "primary"
                            }
                          }
                        },
                        "transfers": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "required": [
                              "inner",
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "inner": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "amount",
                                    "assetId",
                                    "attemptId",
                                    "createdAt",
                                    "fromAddress",
                                    "fromSubaccountId",
                                    "toAddress",
                                    "toSubaccountId"
                                  ],
                                  "properties": {
                                    "attemptId": {
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "fromSubaccountId": {
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "fromAddress": {
                                      "type": "string"
                                    },
                                    "toSubaccountId": {
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "toAddress": {
                                      "type": "string"
                                    },
                                    "assetId": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "amount": {
                                      "type": "string",
                                      "format": "number"
                                    },
                                    "approved": {
                                      "type": "boolean",
                                      "nullable": true
                                    },
                                    "reason": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "batchId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "nullable": true
                                    },
                                    "txnState": {
                                      "anyOf": [
                                        {
                                          "oneOf": [
                                            {
                                              "description": "A transfer where funds have been credited, but the reifying transaction has not been confirmed.",
                                              "type": "string",
                                              "enum": [
                                                "accepted"
                                              ]
                                            },
                                            {
                                              "description": "The transfer is fully confirmed on-chain.",
                                              "type": "string",
                                              "enum": [
                                                "confirmed"
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "createdAt": {
                                      "description": "When the transfer request was created.",
                                      "type": "string",
                                      "format": "date-time"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "example": {
                            "8": {
                              "inner": [
                                {
                                  "amount": "220000000",
                                  "approved": true,
                                  "assetId": 5,
                                  "attemptId": 134,
                                  "createdAt": "2023-07-30T14:30:00-05:00",
                                  "fromAddress": "2CakzUzWpQKmx9GGexMMRTtRcjtSdjCRB68vpUKM4obk",
                                  "fromSubaccountId": 8,
                                  "toAddress": "8j5i8msVWLkTP2ff3bmTLK3k2m3XtW1zdJPYovon55YS",
                                  "toSubaccountId": 9,
                                  "txnState": "accepted"
                                }
                              ],
                              "name": "primary account"
                            }
                          }
                        }
                      },
                      "example": {
                        "deposits": {
                          "8": {
                            "inner": [
                              {
                                "address": "bcrt1qfsf0tfcw0qvtxnm8qmktwpxpt8v0hk4rawh0n7",
                                "amount": "1100000000",
                                "assetId": 1,
                                "createdAt": "2023-07-30T14:30:00-05:00",
                                "fiatToCrypto": false,
                                "kytStatus": "accept",
                                "txnHash": "faae74ae3700cdea62f51930d489a34f3bc4ee2521a017a9bad72dbd0a5156b4",
                                "txnIndex": 1,
                                "txnState": "confirmed",
                                "updatedAt": "2023-07-30T14:30:00-05:00"
                              },
                              {
                                "address": "0x313E3566cE1Db6672287ccE000cf0c617Dc369af",
                                "amount": "111780000000000000",
                                "assetId": 2,
                                "createdAt": "2023-07-30T14:30:00-05:00",
                                "fiatToCrypto": false,
                                "kytStatus": "accept",
                                "txnHash": "0xd2f7b34100d66835565fc598bfac7469881a3db5d1a9e926813853d73a6f16c8",
                                "txnIndex": 0,
                                "txnState": "confirmed",
                                "updatedAt": "2023-07-30T14:30:00-05:00"
                              }
                            ],
                            "name": "primary"
                          }
                        },
                        "transfers": {
                          "8": {
                            "inner": [
                              {
                                "amount": "220000000",
                                "approved": true,
                                "assetId": 5,
                                "attemptId": 134,
                                "createdAt": "2023-07-30T14:30:00-05:00",
                                "fromAddress": "2CakzUzWpQKmx9GGexMMRTtRcjtSdjCRB68vpUKM4obk",
                                "fromSubaccountId": 8,
                                "toAddress": "8j5i8msVWLkTP2ff3bmTLK3k2m3XtW1zdJPYovon55YS",
                                "toSubaccountId": 9,
                                "txnState": "accepted"
                              }
                            ],
                            "name": "primary account"
                          }
                        },
                        "withdrawals": {
                          "8": {
                            "inner": [
                              {
                                "address": "bcrt1qfsf0tfcw0qvtxnm8qmktwpxpt8v0hk4rawh0n7",
                                "amount": "12000000",
                                "approved": true,
                                "assetId": 1,
                                "attemptId": 112,
                                "createdAt": "2023-07-30T14:30:00-05:00",
                                "kytStatus": "accept",
                                "txnHash": "faae74ae3700cdea62f51930d489a34f3bc4ee2521a017a9bad72dbd0a5156b4",
                                "txnIndex": 1,
                                "txnState": "confirmed",
                                "updatedAt": "2023-07-30T14:30:00-05:00"
                              },
                              {
                                "address": "0x313E3566cE1Db6672287ccE000cf0c617Dc369af",
                                "amount": "11178000000000000000",
                                "approved": true,
                                "assetId": 2,
                                "attemptId": 234,
                                "createdAt": "2023-07-30T14:30:00-05:00",
                                "kytStatus": "accept",
                                "txnHash": "0xd2f7b34100d66835565fc598bfac7469881a3db5d1a9e926813853d73a6f16c8",
                                "txnIndex": 0,
                                "txnState": "confirmed",
                                "updatedAt": "2023-07-30T14:30:00-05:00"
                              }
                            ],
                            "name": "primary"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/users/subaccount/{subaccount_id}/deposits": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "subaccount_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "inner",
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "inner": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "amount",
                                "assetId",
                                "createdAt",
                                "fiatToCrypto",
                                "timeEst",
                                "txnState",
                                "updatedAt"
                              ],
                              "properties": {
                                "assetId": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "amount": {
                                  "type": "string",
                                  "format": "number"
                                },
                                "txnHash": {
                                  "description": "Deposits that are found on-chain will have a `txn_hash` and `txn_index`. If it is a pending deposit determined by some external payment system, these can be empty",
                                  "type": "string",
                                  "nullable": true
                                },
                                "txnIndex": {
                                  "type": "integer",
                                  "format": "int64",
                                  "nullable": true
                                },
                                "createdAt": {
                                  "description": "When we first started tracking this deposit. Probably in the mempool.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updatedAt": {
                                  "description": "If `txn_state` is `Confirmed` and `KytStatus` is accepted, this is the time that the deposit is credited. Otherwise, it is the last update (e.g if a kyt external id was created, or transaction state updated).",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "txnState": {
                                  "description": "The deposit is credited when `Confirmed` and accepted.",
                                  "type": "string",
                                  "enum": [
                                    "pending",
                                    "received",
                                    "confirmed",
                                    "dropped",
                                    "failed"
                                  ]
                                },
                                "address": {
                                  "description": "The deposit source address",
                                  "type": "string",
                                  "nullable": true
                                },
                                "timeEst": {
                                  "description": "The estimated time that this deposit will transition to `Confirmed`. This is currently only applicable for `Received` deposits",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "fiatToCrypto": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "example": {
                        "8": {
                          "inner": [
                            {
                              "address": "bcrt1qfsf0tfcw0qvtxnm8qmktwpxpt8v0hk4rawh0n7",
                              "amount": "1100000000",
                              "assetId": 1,
                              "createdAt": "2023-07-30T14:30:00-05:00",
                              "fiatToCrypto": false,
                              "kytStatus": "accept",
                              "txnHash": "faae74ae3700cdea62f51930d489a34f3bc4ee2521a017a9bad72dbd0a5156b4",
                              "txnIndex": 1,
                              "txnState": "confirmed",
                              "updatedAt": "2023-07-30T14:30:00-05:00"
                            },
                            {
                              "address": "0x313E3566cE1Db6672287ccE000cf0c617Dc369af",
                              "amount": "111780000000000000",
                              "assetId": 2,
                              "createdAt": "2023-07-30T14:30:00-05:00",
                              "fiatToCrypto": false,
                              "kytStatus": "accept",
                              "txnHash": "0xd2f7b34100d66835565fc598bfac7469881a3db5d1a9e926813853d73a6f16c8",
                              "txnIndex": 0,
                              "txnState": "confirmed",
                              "updatedAt": "2023-07-30T14:30:00-05:00"
                            }
                          ],
                          "name": "primary"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/users/subaccount/{subaccount_id}/withdrawals": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "subaccount_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "inner",
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "inner": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "address",
                                "amount",
                                "assetId",
                                "attemptId",
                                "createdAt",
                                "updatedAt"
                              ],
                              "properties": {
                                "assetId": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "amount": {
                                  "type": "string",
                                  "format": "number"
                                },
                                "txnHash": {
                                  "description": "Once the transaction has been determined / sent, `txn_hash`, `txn_index`, and `txn_state` will be populated",
                                  "type": "string",
                                  "nullable": true
                                },
                                "txnIndex": {
                                  "type": "integer",
                                  "format": "int64",
                                  "nullable": true
                                },
                                "txnState": {
                                  "type": "string",
                                  "enum": [
                                    "pending",
                                    "received",
                                    "confirmed",
                                    "dropped",
                                    "failed"
                                  ],
                                  "nullable": true
                                },
                                "createdAt": {
                                  "description": "When the withdrawal request was created.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updatedAt": {
                                  "description": "When the withdrawal was sent out.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "attemptId": {
                                  "description": "A unique identifier for this withdrawal request.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "address": {
                                  "description": "The withdrawal destination address",
                                  "type": "string"
                                },
                                "approved": {
                                  "type": "boolean",
                                  "nullable": true
                                },
                                "reason": {
                                  "type": "string",
                                  "nullable": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "example": {
                        "8": {
                          "inner": [
                            {
                              "address": "bcrt1qfsf0tfcw0qvtxnm8qmktwpxpt8v0hk4rawh0n7",
                              "amount": "12000000",
                              "approved": true,
                              "assetId": 1,
                              "attemptId": 112,
                              "createdAt": "2023-07-30T14:30:00-05:00",
                              "kytStatus": "accept",
                              "txnHash": "faae74ae3700cdea62f51930d489a34f3bc4ee2521a017a9bad72dbd0a5156b4",
                              "txnIndex": 1,
                              "txnState": "confirmed",
                              "updatedAt": "2023-07-30T14:30:00-05:00"
                            },
                            {
                              "address": "0x313E3566cE1Db6672287ccE000cf0c617Dc369af",
                              "amount": "11178000000000000000",
                              "approved": true,
                              "assetId": 2,
                              "attemptId": 234,
                              "createdAt": "2023-07-30T14:30:00-05:00",
                              "kytStatus": "accept",
                              "txnHash": "0xd2f7b34100d66835565fc598bfac7469881a3db5d1a9e926813853d73a6f16c8",
                              "txnIndex": 0,
                              "txnState": "confirmed",
                              "updatedAt": "2023-07-30T14:30:00-05:00"
                            }
                          ],
                          "name": "primary"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/users/subaccount/{subaccount_id}/transfers": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "subaccount_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "inner",
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "inner": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "amount",
                                "assetId",
                                "attemptId",
                                "createdAt",
                                "fromAddress",
                                "fromSubaccountId",
                                "toAddress",
                                "toSubaccountId"
                              ],
                              "properties": {
                                "attemptId": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "fromSubaccountId": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "fromAddress": {
                                  "type": "string"
                                },
                                "toSubaccountId": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "toAddress": {
                                  "type": "string"
                                },
                                "assetId": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "amount": {
                                  "type": "string",
                                  "format": "number"
                                },
                                "approved": {
                                  "type": "boolean",
                                  "nullable": true
                                },
                                "reason": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "batchId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "nullable": true
                                },
                                "txnState": {
                                  "anyOf": [
                                    {
                                      "oneOf": [
                                        {
                                          "description": "A transfer where funds have been credited, but the reifying transaction has not been confirmed.",
                                          "type": "string",
                                          "enum": [
                                            "accepted"
                                          ]
                                        },
                                        {
                                          "description": "The transfer is fully confirmed on-chain.",
                                          "type": "string",
                                          "enum": [
                                            "confirmed"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "createdAt": {
                                  "description": "When the transfer request was created.",
                                  "type": "string",
                                  "format": "date-time"
                                }
                              }
                            }
                          }
                        }
                      },
                      "example": {
                        "8": {
                          "inner": [
                            {
                              "amount": "220000000",
                              "approved": true,
                              "assetId": 5,
                              "attemptId": 134,
                              "createdAt": "2023-07-30T14:30:00-05:00",
                              "fromAddress": "2CakzUzWpQKmx9GGexMMRTtRcjtSdjCRB68vpUKM4obk",
                              "fromSubaccountId": 8,
                              "toAddress": "8j5i8msVWLkTP2ff3bmTLK3k2m3XtW1zdJPYovon55YS",
                              "toSubaccountId": 9,
                              "txnState": "accepted"
                            }
                          ],
                          "name": "primary account"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/users/subaccount/{subaccount_id}/orders": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "subaccount_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "createdBefore",
            "description": "Returns the most recent orders where `created_at < created_before`. If null, returns the most recent orders.",
            "schema": {
              "description": "Returns the most recent orders where `created_at < created_before`. If null, returns the most recent orders.",
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The maximum number of orders to return. If null, defaults to 100. The maximum is 1000.",
            "schema": {
              "description": "The maximum number of orders to return. If null, defaults to 100. The maximum is 1000.",
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "required": [
                        "name",
                        "orders"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "orders": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "createdAt",
                              "fills",
                              "marketId",
                              "modifies",
                              "orderFees",
                              "price",
                              "qty",
                              "side",
                              "status"
                            ],
                            "properties": {
                              "orderId": {
                                "description": "The cube-assigned order ID, also known as `ExchangeOrderId`. Unique per order.",
                                "type": "integer",
                                "format": "int64",
                                "nullable": true
                              },
                              "marketId": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "side": {
                                "type": "string",
                                "enum": [
                                  "Bid",
                                  "Ask"
                                ]
                              },
                              "price": {
                                "description": "Most recent price, including modifies",
                                "type": "integer",
                                "format": "uint64",
                                "minimum": 0
                              },
                              "qty": {
                                "description": "Most recent quantity, including modifies",
                                "type": "integer",
                                "format": "uint64",
                                "minimum": 0
                              },
                              "createdAt": {
                                "description": "The matching-engine transact-time in nanoseconds that this order was created.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "modifiedAt": {
                                "description": "The matching-engine transact-time in nanoseconds of the most recent modify event. Empty if the order was never modified.",
                                "type": "integer",
                                "format": "int64",
                                "nullable": true
                              },
                              "canceledAt": {
                                "description": "The matching-engine transact-time in nanoseconds when this order was cancelled. Empty if the order was never cancelled, e.g. is open or filled.",
                                "type": "integer",
                                "format": "int64",
                                "nullable": true
                              },
                              "filledAt": {
                                "type": "integer",
                                "format": "int64",
                                "nullable": true
                              },
                              "filledTotal": {
                                "type": "object",
                                "required": [
                                  "baseAmount",
                                  "feeAmount",
                                  "filledAt",
                                  "quoteAmount"
                                ],
                                "properties": {
                                  "baseAmount": {
                                    "type": "string",
                                    "format": "number"
                                  },
                                  "quoteAmount": {
                                    "type": "string",
                                    "format": "number"
                                  },
                                  "feeAmount": {
                                    "type": "string",
                                    "format": "number"
                                  },
                                  "feeAssetId": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true
                                  },
                                  "filledAt": {
                                    "type": "integer",
                                    "format": "int64"
                                  }
                                },
                                "nullable": true
                              },
                              "fills": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "baseAmount",
                                    "baseSettled",
                                    "feeAmount",
                                    "filledAt",
                                    "isAggressor",
                                    "quoteAmount",
                                    "quoteSettled",
                                    "tradeId"
                                  ],
                                  "properties": {
                                    "tradeId": {
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "baseBatchId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "nullable": true
                                    },
                                    "quoteBatchId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "nullable": true
                                    },
                                    "baseSettled": {
                                      "type": "boolean"
                                    },
                                    "quoteSettled": {
                                      "type": "boolean"
                                    },
                                    "isAggressor": {
                                      "description": "If this order was an aggressor in this fill.",
                                      "type": "boolean"
                                    },
                                    "baseAmount": {
                                      "type": "string",
                                      "format": "number"
                                    },
                                    "quoteAmount": {
                                      "type": "string",
                                      "format": "number"
                                    },
                                    "feeAmount": {
                                      "type": "string",
                                      "format": "number"
                                    },
                                    "feeAssetId": {
                                      "type": "integer",
                                      "format": "int32",
                                      "nullable": true
                                    },
                                    "filledAt": {
                                      "type": "integer",
                                      "format": "int64"
                                    }
                                  }
                                }
                              },
                              "modifies": {
                                "description": "Any previous states of price/quantity associated with this order due to modifies. If the order has been modified, the original price/quantity will appear in this list.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "modifiedAt",
                                    "price",
                                    "quantity"
                                  ],
                                  "properties": {
                                    "price": {
                                      "type": "integer",
                                      "format": "uint64",
                                      "minimum": 0
                                    },
                                    "quantity": {
                                      "type": "integer",
                                      "format": "uint64",
                                      "minimum": 0
                                    },
                                    "modifiedAt": {
                                      "type": "integer",
                                      "format": "int64"
                                    }
                                  }
                                }
                              },
                              "reason": {
                                "description": "Reject reason if rejected. Cancel reason if canceled.",
                                "type": "string",
                                "nullable": true
                              },
                              "settled": {
                                "description": "The settlement status for this order's fills.\n\nIf the order has no fills, or none of the fills have been assigned to a settlement batch, then this will be `None`. This can be derived from `fills`.",
                                "type": "boolean",
                                "nullable": true
                              },
                              "status": {
                                "description": "The current status of this order. Note that if the order is `Open`, this is a best-effort estimation, and the order service has the most correct status.",
                                "type": "string",
                                "enum": [
                                  "open",
                                  "rejected",
                                  "filled",
                                  "p-filled",
                                  "canceled"
                                ]
                              },
                              "orderFees": {
                                "description": "Any fees applied to the order as a whole, which are distinct from any fees applied to each fill.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "amount",
                                    "assetId",
                                    "direction",
                                    "name"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "enum": [
                                        "impliedMatchFee"
                                      ]
                                    },
                                    "assetId": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "amount": {
                                      "type": "string",
                                      "format": "number"
                                    },
                                    "direction": {
                                      "type": "string",
                                      "enum": [
                                        "fee",
                                        "rebate"
                                      ]
                                    }
                                  }
                                }
                              },
                              "clientOrderId": {
                                "type": "integer",
                                "format": "uint64",
                                "minimum": 0,
                                "nullable": true
                              },
                              "timeInForce": {
                                "type": "integer",
                                "format": "int32",
                                "nullable": true
                              },
                              "orderType": {
                                "type": "integer",
                                "format": "int32",
                                "nullable": true
                              },
                              "selfTradePrevention": {
                                "type": "integer",
                                "format": "int32",
                                "nullable": true
                              },
                              "cancelOnDisconnect": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "postOnly": {
                                "type": "boolean",
                                "nullable": true
                              }
                            }
                          }
                        }
                      },
                      "example": {
                        "name": "primary",
                        "orders": [
                          {
                            "cancelOnDisconnect": false,
                            "clientOrderId": 1720791493653,
                            "createdAt": 1720791493673997000,
                            "filledAt": 1720933004211574000,
                            "filledTotal": {
                              "baseAmount": "3300000",
                              "feeAmount": "0",
                              "feeAssetId": 1,
                              "filledAt": 1720933004211574000,
                              "quoteAmount": "1800000000"
                            },
                            "fills": [
                              {
                                "baseAmount": "3300000",
                                "baseSettled": true,
                                "feeAmount": "0",
                                "feeAssetId": 1,
                                "filledAt": 1720933004211574000,
                                "isAggressor": true,
                                "quoteAmount": "1800000000",
                                "quoteSettled": true,
                                "tradeId": 620011
                              }
                            ],
                            "marketId": 100004,
                            "orderId": 610001,
                            "orderType": 0,
                            "postOnly": false,
                            "price": 600000,
                            "qty": 3000,
                            "selfTradePrevention": 0,
                            "side": "Bid",
                            "status": "filled",
                            "timeInForce": 1
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/users/subaccount/{subaccount_id}/fills": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "subaccount_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "marketIds",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "orderIds",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "required": [
                        "fills",
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "fills": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "baseAmount",
                              "feeAmount",
                              "filledAt",
                              "isAggressor",
                              "marketId",
                              "orderId",
                              "quoteAmount",
                              "side",
                              "tradeId"
                            ],
                            "properties": {
                              "marketId": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "tradeId": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "orderId": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "side": {
                                "type": "string",
                                "enum": [
                                  "Bid",
                                  "Ask"
                                ]
                              },
                              "aggressingSide": {
                                "deprecated": true,
                                "type": "string",
                                "enum": [
                                  "Bid",
                                  "Ask"
                                ],
                                "nullable": true
                              },
                              "price": {
                                "type": "integer",
                                "format": "int64",
                                "nullable": true
                              },
                              "quantity": {
                                "type": "integer",
                                "format": "int64",
                                "nullable": true
                              },
                              "isAggressor": {
                                "description": "If this order was an aggressor in this fill.",
                                "type": "boolean"
                              },
                              "baseAmount": {
                                "type": "string",
                                "format": "number"
                              },
                              "quoteAmount": {
                                "type": "string",
                                "format": "number"
                              },
                              "feeAmount": {
                                "type": "string",
                                "format": "number"
                              },
                              "feeAssetId": {
                                "type": "integer",
                                "format": "int32",
                                "nullable": true
                              },
                              "filledAt": {
                                "type": "integer",
                                "format": "int64"
                              }
                            }
                          }
                        }
                      },
                      "example": {
                        "fills": [
                          {
                            "aggressingSide": "Ask",
                            "baseAmount": "3300000",
                            "feeAmount": "0",
                            "feeAssetId": 1,
                            "filledAt": 1720933004211574000,
                            "marketId": 100004,
                            "orderId": 610001,
                            "price": 700000,
                            "quantity": 3000,
                            "quoteAmount": "2100000000",
                            "side": "Bid",
                            "tradeId": 620011
                          }
                        ],
                        "name": "primary"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/users/apikeys": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "accessLevel",
                  "subaccountId"
                ],
                "properties": {
                  "accessLevel": {
                    "type": "string",
                    "enum": [
                      "read",
                      "write"
                    ]
                  },
                  "subaccountId": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                },
                "example": {
                  "accessLevel": "read",
                  "subaccountId": [
                    1,
                    2
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "required": [
                        "accessLevel",
                        "apiKey",
                        "secret",
                        "subaccountId"
                      ],
                      "properties": {
                        "apiKey": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "secret": {
                          "type": "string"
                        },
                        "subaccountId": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int64"
                          }
                        },
                        "accessLevel": {
                          "type": "string",
                          "enum": [
                            "read",
                            "write"
                          ]
                        }
                      },
                      "example": {
                        "accessLevel": "read",
                        "apiKey": "173de89b-ff98-9711-479c-09d4f54f2177",
                        "secret": "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                        "subaccountId": [
                          1,
                          2
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/users/apikeys/{api_key}": {
      "delete": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "required": [
                        "apiKey"
                      ],
                      "properties": {
                        "apiKey": {
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/users/fee-estimates": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "marketId",
                  "postOnly",
                  "price",
                  "side",
                  "subaccountId"
                ],
                "properties": {
                  "marketId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "subaccountId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "side": {
                    "type": "string",
                    "enum": [
                      "Bid",
                      "Ask"
                    ]
                  },
                  "postOnly": {
                    "type": "string",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ]
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0,
                    "nullable": true
                  },
                  "quoteQuantity": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0,
                    "nullable": true
                  },
                  "price": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0
                  }
                },
                "example": {
                  "marketId": 100086,
                  "postOnly": "Disabled",
                  "price": 14332,
                  "quantity": 10,
                  "side": "Bid",
                  "subaccountId": 42
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "required": [
                        "estimatedFees"
                      ],
                      "properties": {
                        "estimatedFees": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "amount",
                              "assetId",
                              "direction",
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "enum": [
                                  "tradeFee",
                                  "impliedMatchFee"
                                ]
                              },
                              "assetId": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "amount": {
                                "type": "string",
                                "format": "number"
                              },
                              "direction": {
                                "type": "string",
                                "enum": [
                                  "fee",
                                  "rebate"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "example": {
                        "estimatedFees": [
                          {
                            "amount": "1200",
                            "assetId": 5,
                            "direction": "fee",
                            "name": "tradeFee"
                          },
                          {
                            "amount": "100000",
                            "assetId": 5,
                            "direction": "rebate",
                            "name": "impliedMatchFee"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/users/address": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sourceIds",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "names",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "required": [
                        "addresses",
                        "settings"
                      ],
                      "properties": {
                        "addresses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "activeSince",
                              "address",
                              "approvedAt",
                              "createdAt",
                              "id",
                              "name",
                              "sourceId",
                              "status"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "type": "string"
                              },
                              "sourceId": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "assetId": {
                                "type": "integer",
                                "format": "int32",
                                "nullable": true
                              },
                              "address": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "pending",
                                  "approved",
                                  "active"
                                ]
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "approvedAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "activeSince": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "settings": {
                          "type": "object",
                          "required": [
                            "whitelistStatus",
                            "whitelisted"
                          ],
                          "properties": {
                            "whitelisted": {
                              "type": "boolean"
                            },
                            "whitelistStatus": {
                              "type": "string",
                              "enum": [
                                "pending",
                                "approved",
                                "enabled",
                                "disabled"
                              ]
                            }
                          },
                          "example": {
                            "whitelistStatus": "enabled",
                            "whitelisted": true
                          }
                        }
                      },
                      "example": {
                        "addresses": [
                          {
                            "activeSince": "2024-06-14T20:33:17.79384Z",
                            "address": "CNf2sYNM8iH4aGtDSvmRRWEQorVvG3cMWzumtQo7Q8h8",
                            "approvedAt": "2024-06-13T20:33:17.79384Z",
                            "assetId": 5,
                            "createdAt": "2024-06-13T20:32:17.79384Z",
                            "id": "b4054981-600b-4ae1-858e-01f65f09dd60",
                            "name": "My Address 1",
                            "sourceId": 3,
                            "status": "active"
                          }
                        ],
                        "settings": {
                          "whitelistStatus": "enabled",
                          "whitelisted": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/users/address/settings": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "required": [
                        "whitelistStatus",
                        "whitelisted"
                      ],
                      "properties": {
                        "whitelisted": {
                          "type": "boolean"
                        },
                        "whitelistStatus": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "approved",
                            "enabled",
                            "disabled"
                          ]
                        }
                      },
                      "example": {
                        "whitelistStatus": "enabled",
                        "whitelisted": true
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/users/withdraw": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "assetId",
                  "destination",
                  "subaccountId"
                ],
                "properties": {
                  "subaccountId": {
                    "description": "The subaccount to withdraw from.",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0
                  },
                  "assetId": {
                    "description": "The asset to withdraw. The network is determined by the asset ID.",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0
                  },
                  "amount": {
                    "description": "The amount to withdraw. This is denominated in the smallest unit of the asset (e.g. satoshis for BTC, wei for ETH, lamports for SOL). The amount must be greater than the dust limit for the asset.",
                    "type": "integer",
                    "format": "uint128",
                    "minimum": 0
                  },
                  "destination": {
                    "description": "The destination address for the withdrawal.",
                    "type": "string"
                  },
                  "timestamp": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0
                  },
                  "verificationKey": {
                    "description": "Base-64 encoded `cube_ov_utils::ov_schema::PublicKey`",
                    "type": "string"
                  },
                  "signature": {
                    "description": "Base-64 encoded signature of this withdrawal request",
                    "type": "string"
                  }
                },
                "example": {
                  "amount": "220000000000000",
                  "assetId": 2,
                  "destination": "0x403244EcfafF17c31e39fc67848d61d9b6637Ee2",
                  "subaccountId": 8
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "required": [
                        "status"
                      ],
                      "properties": {
                        "status": {
                          "description": "The status of the external KYT check",
                          "type": "string",
                          "enum": [
                            "pending",
                            "reject",
                            "failed",
                            "pendingReview",
                            "automaticAccept",
                            "automaticReject",
                            "manualAccept",
                            "manualReject"
                          ]
                        },
                        "approved": {
                          "description": "Whether the withdrawal was approved by the system",
                          "type": "boolean",
                          "nullable": true
                        },
                        "reason": {
                          "description": "The reason for the withdrawal being rejected",
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "example": {
                        "approved": true,
                        "status": "accept"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/users/transfer": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "assetId",
                  "fromSubaccountId",
                  "toSubaccountId"
                ],
                "properties": {
                  "fromSubaccountId": {
                    "description": "The subaccount to transfer from.",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0
                  },
                  "toSubaccountId": {
                    "description": "The subaccount to transfer to.",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0
                  },
                  "assetId": {
                    "description": "The asset to transfer. The network is determined by the asset ID.",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0
                  },
                  "amount": {
                    "description": "The amount to transfer. This is denominated in the smallest unit of the asset (e.g. satoshis for BTC, wei for ETH, lamports for SOL). The amount must be greater than the dust limit for the asset.",
                    "type": "integer",
                    "format": "uint128",
                    "minimum": 0
                  },
                  "timestamp": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0
                  },
                  "verificationKey": {
                    "description": "Base-64 encoded `cube_ov_utils::ov_schema::PublicKey`",
                    "type": "string"
                  },
                  "signature": {
                    "description": "Base-64 encoded signature of this withdrawal request",
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "properties": {
                        "approved": {
                          "description": "Whether the transfer was approved by the system",
                          "type": "boolean",
                          "nullable": true
                        },
                        "reason": {
                          "description": "The reason for the transfer being rejected",
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": [],
            "ApiSignature": [],
            "ApiTimestamp": []
          }
        ]
      }
    },
    "/history/klines": {
      "get": {
        "summary": "Aggregated historical price data (klines)",
        "description": "Statistics about the price of an asset during a specific time interval. Returned as an array of unnamed values to reduce size.\nFields are: [\n    time (in seconds since epoch),\n    open price,\n    high price,\n    low price,\n    close price,\n    volume (in RawUnits)\n]\nCached frequently to improve response time; provide \\'Cache-Control: no-cache\\' header on request to pass through.",
        "parameters": [
          {
            "in": "query",
            "name": "marketId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "interval",
            "schema": {
              "type": "string",
              "enum": [
                "1s",
                "1m",
                "15m",
                "1h",
                "4h",
                "1d",
                "7d"
              ],
              "nullable": true
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0,
              "nullable": true
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": [
                          {
                            "type": "integer",
                            "format": "int64"
                          },
                          {
                            "type": "integer",
                            "format": "int64"
                          },
                          {
                            "type": "integer",
                            "format": "int64"
                          },
                          {
                            "type": "integer",
                            "format": "int64"
                          },
                          {
                            "type": "integer",
                            "format": "int64"
                          },
                          {
                            "type": "string",
                            "format": "number"
                          }
                        ],
                        "maxItems": 6,
                        "minItems": 6
                      },
                      "example": [
                        [
                          1710944100,
                          17263,
                          17509,
                          17247,
                          17459,
                          "23107"
                        ],
                        [
                          1710943200,
                          17203,
                          17314,
                          17156,
                          17260,
                          "55426"
                        ]
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/markets": {
      "get": {
        "summary": "Fetch all asset, market, and source definitions",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "type": "object",
                      "required": [
                        "assets",
                        "feeTables",
                        "markets",
                        "sources"
                      ],
                      "properties": {
                        "assets": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "assetId",
                              "assetType",
                              "decimals",
                              "displayDecimals",
                              "metadata",
                              "settles",
                              "sourceId",
                              "symbol"
                            ],
                            "properties": {
                              "assetId": {
                                "description": "The Cube-assigned asset ID.",
                                "type": "integer",
                                "format": "uint64",
                                "minimum": 0
                              },
                              "symbol": {
                                "description": "The canonical symbol for this asset.",
                                "type": "string"
                              },
                              "decimals": {
                                "description": "The maximum precision of this asset.\n\ne.g `18` for ETH (`10^18` WEI per ETH), `8` for BTC (`10^8` SAT per BTC)",
                                "type": "integer",
                                "format": "int32"
                              },
                              "displayDecimals": {
                                "description": "The default number of decimal places to display for human-readable quantities for this asset.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "settles": {
                                "description": "Whether this asset settles to the blockchain.",
                                "type": "boolean"
                              },
                              "assetType": {
                                "description": "The type of this asset.",
                                "type": "string",
                                "enum": [
                                  "Fiat",
                                  "Crypto"
                                ]
                              },
                              "sourceId": {
                                "description": "The source ID of this asset.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "metadata": {
                                "description": "Additional metadata about this asset."
                              }
                            },
                            "example": {
                              "assetId": 1,
                              "assetType": "Crypto",
                              "decimals": 8,
                              "displayDecimals": 5,
                              "metadata": {},
                              "settles": true,
                              "sourceId": 1,
                              "status": 1,
                              "symbol": "BTC"
                            }
                          }
                        },
                        "sources": {
                          "type": "array",
                          "items": {
                            "description": "A collection of assets grouped by origination.\n\nFor `Crypto` assets, this is their native blockchain.\n\ne.g `ETH` and `SHIB` are both on the `ethereum` (`CHAIN_ID = 0x1`) blockchain.",
                            "type": "object",
                            "required": [
                              "metadata",
                              "name",
                              "sourceId"
                            ],
                            "properties": {
                              "sourceId": {
                                "description": "The Cube-assigned source ID.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "name": {
                                "description": "A human-readable name for this source.",
                                "type": "string"
                              },
                              "transactionExplorer": {
                                "description": "The URL of a block explorer that can be used to view transactions.\n\nThe value is provided as a format string with a single `{}` placeholder for the transaction. e.g `https://etherscan.io/tx/{}`",
                                "type": "string",
                                "nullable": true
                              },
                              "addressExplorer": {
                                "description": "The URL of a block explorer that can be used to view addresses.\n\nThe value is provided as a format string with a single `{}` placeholder for the address. e.g `https://etherscan.io/address/{}`",
                                "type": "string",
                                "nullable": true
                              },
                              "metadata": {
                                "description": "Additional metadata about this source."
                              }
                            },
                            "example": {
                              "addressExplorer": "https://mempool.space/address/{}",
                              "metadata": {
                                "network": "Mainnet",
                                "scope": "bitcoin",
                                "type": "mainnet"
                              },
                              "name": "bitcoin",
                              "sourceId": 1,
                              "transactionExplorer": "https://mempool.space/tx/{}"
                            }
                          }
                        },
                        "markets": {
                          "type": "array",
                          "items": {
                            "description": "A market is identified by its unique `marketId`. The market definition specifies specifies the base and quote assets and their respective lot sizes for the particular market.",
                            "type": "object",
                            "required": [
                              "baseAssetId",
                              "baseLotSize",
                              "feeTableId",
                              "isImplied",
                              "marketId",
                              "maxOrderQuoteAmt",
                              "minOrderQuoteAmt",
                              "priceDisplayDecimals",
                              "priceTickSize",
                              "protectionPriceLevels",
                              "quantityTickSize",
                              "quoteAssetId",
                              "quoteLotSize",
                              "symbol"
                            ],
                            "properties": {
                              "marketId": {
                                "description": "The Cube-assigned market ID.",
                                "type": "integer",
                                "format": "uint64",
                                "minimum": 0
                              },
                              "symbol": {
                                "description": "The market's symbol. Normally this is base symbol concatenated with the quote symbol.\n\ne.g `BTCUSDC`",
                                "type": "string"
                              },
                              "baseAssetId": {
                                "description": "The asset ID of the base asset.",
                                "type": "integer",
                                "format": "uint64",
                                "minimum": 0
                              },
                              "baseLotSize": {
                                "description": "The number of units of the base asset that are represented by one base lot.",
                                "type": "string"
                              },
                              "quoteAssetId": {
                                "description": "The asset ID of the quote asset.",
                                "type": "integer",
                                "format": "uint64",
                                "minimum": 0
                              },
                              "quoteLotSize": {
                                "description": "The number of units of the quote asset that are represented by one quote lot.",
                                "type": "string"
                              },
                              "priceDisplayDecimals": {
                                "description": "The default number of decimal places to display for human-readable prices for this market.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "protectionPriceLevels": {
                                "type": "integer",
                                "format": "uint64",
                                "minimum": 0
                              },
                              "priceBandBidPct": {
                                "description": "The percentage that a new bid can be placed below the current reference price.",
                                "type": "integer",
                                "format": "uint32",
                                "minimum": 0,
                                "nullable": true
                              },
                              "priceBandAskPct": {
                                "description": "The percentage that a new ask can be placed above the current reference price.",
                                "type": "integer",
                                "format": "uint32",
                                "minimum": 0,
                                "nullable": true
                              },
                              "minOrderQuoteAmt": {
                                "description": "The minimum notional amount for which an order will be accepted, expressed in RawUnits of the quote asset.  Inclusive. Note that this value is price-dependent.",
                                "type": "string",
                                "format": "number"
                              },
                              "maxOrderQuoteAmt": {
                                "description": "The maximum notional amount for which an order will be accepted, expressed in RawUnits of the quote asset.  Inclusive. Note that this value is price-dependent.",
                                "type": "string",
                                "format": "number"
                              },
                              "priceTickSize": {
                                "description": "The human-readable minimum price increment.",
                                "type": "string"
                              },
                              "quantityTickSize": {
                                "description": "The human-readable minimum quantity increment.",
                                "type": "string"
                              },
                              "feeTableId": {
                                "description": "ID of the fee table that will be used for lookups on this market.",
                                "type": "integer",
                                "format": "uint64",
                                "minimum": 0
                              },
                              "baseMarketIds": {
                                "description": "If this is an implied market, this is the list of implied-through base markets. Otherwise, this is `None`.",
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "format": "uint64",
                                  "minimum": 0
                                },
                                "nullable": true
                              },
                              "isImplied": {
                                "description": "If this market is currently enabled for implied matching, this will be `true`. Otherwise, this will be `false` or missing.",
                                "type": "boolean"
                              },
                              "impliedScheme": {
                                "description": "The implied scheme for this market. eg. If BsQs scheme, given assets ETH, BTC, and USDC, and let B be ETH, S be USDC, and Q be BTC then given base markets ETH/USDC and BTC/USDC, we can have implied market ETH/BTC.",
                                "type": "string",
                                "enum": [
                                  "bsqs",
                                  "bssq",
                                  "sbqs",
                                  "sbsq"
                                ],
                                "nullable": true
                              }
                            },
                            "example": {
                              "baseAssetId": 2,
                              "baseLotSize": "1000000000000000",
                              "baseMarketIds": [
                                100004,
                                100005
                              ],
                              "feeTableId": 1,
                              "impliedScheme": "bsqs",
                              "isImplied": true,
                              "isPrimary": true,
                              "marketId": 100001,
                              "minOrderQuoteAmt": "1000000000000000000",
                              "priceBandAskPct": 500,
                              "priceBandBidPct": 20,
                              "priceDisplayDecimals": 5,
                              "priceTickSize": "0.00001",
                              "protectionPriceLevels": 1000,
                              "quantityTickSize": "0.001",
                              "quoteAssetId": 1,
                              "quoteLotSize": "1",
                              "status": 1,
                              "symbol": "ETHBTC"
                            }
                          }
                        },
                        "feeTables": {
                          "type": "array",
                          "items": {
                            "description": "A fee table consisting of one or more fee tiers. Each tier is applied in priority order and the first tier whose requirements match the characteristics of a given fill determines the fees for that fill. Each market is associated with a specific fee table via its \"feeTableId\".",
                            "type": "object",
                            "required": [
                              "feeTableId",
                              "feeTiers"
                            ],
                            "properties": {
                              "feeTableId": {
                                "type": "integer",
                                "format": "uint64",
                                "minimum": 0
                              },
                              "feeTiers": {
                                "type": "array",
                                "items": {
                                  "description": "A single row in a FeeTable.",
                                  "type": "object",
                                  "required": [
                                    "makerFeeRatio",
                                    "priority",
                                    "takerFeeRatio"
                                  ],
                                  "properties": {
                                    "priority": {
                                      "description": "The order in which this tier is considered when applying the fee table that contains it.",
                                      "type": "integer",
                                      "format": "uint64",
                                      "minimum": 0
                                    },
                                    "makerFeeRatio": {
                                      "description": "The multiplicative fee ratio for the resting order",
                                      "type": "number",
                                      "format": "double"
                                    },
                                    "takerFeeRatio": {
                                      "description": "The multiplicative fee ratio for the aggressing order",
                                      "type": "number",
                                      "format": "double"
                                    }
                                  },
                                  "example": {
                                    "makerFeeRatio": 0.0004,
                                    "priority": 1,
                                    "takerFeeRatio": 0.0008
                                  }
                                }
                              }
                            },
                            "example": {
                              "feeTableId": 1,
                              "feeTiers": [
                                {
                                  "makerFeeRatio": 0.0004,
                                  "priority": 1,
                                  "takerFeeRatio": 0.0008
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error was encountered while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "reason"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "error": {
                      "code": "E10000",
                      "reason": "Reason"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "The API Key ID as specified in the [API settings page](https://cube.exchange/settings/api).\n\nEach API key has a corresponding access level that is set when the key is created.\n- Read access only allows access to read HTTP methods (GET, HEAD, etc.).\n- Write access allows access to all HTTP methods.\n"
      },
      "ApiSignature": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-signature",
        "description": "The API signature string authenticating this request.\n\nThe payload to be signed is the concatenation of the byte string `cube.xyz` and the current unix epoch timestamp in seconds converted into an 8-byte little-endian array. The signature is the HMAC-SHA256 digest of the payload using the secret key associated with the specified API key.\n\nImplementation notes:\n- The signature is base-64 encoded with the 'standard' alphabet and\n  padding.\n\n  ```\n  ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\n  ```\n- The timestamp should be encoded as 8-byte little-endian (array of bytes)\n- The secret key should be decoded from a hex string into a 32-byte array of\n  bytes\n"
      },
      "ApiTimestamp": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-timestamp",
        "description": "The timestamp used for signature generation."
      }
    },
    "headers": {
      "x-cube-request-id": {
        "description": "The cube-assigned ID for this request. If known, please supply with support requests",
        "style": "simple",
        "required": true,
        "schema": {
          "title": "RequestId",
          "type": "string",
          "format": "uuid"
        },
        "example": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
      }
    }
  }
}